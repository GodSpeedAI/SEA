@startuml C4_Container
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

TITLE Container diagram for Sentient Enterprise Architecture (SEA)

Person(user, "Knowledge Worker", "A user of the SEA system.")

System_Boundary(sea, "Sentient Enterprise Architecture (SEA) 5.0") {
    Container(webapp, "Web Application", "JavaScript, React", "Provides the user interface for interacting with the SEA system.")
    Container(api_gateway, "API Gateway", "Spring Cloud Gateway", "Routes requests to the appropriate backend services.")
    Container(domain_services, "Domain Services", "Java, Spring Boot", "Implements the core business logic of the SEA system.")
    Container(knowledge_graph_service, "Knowledge Graph Service", "Python, Neo4j", "Manages the semantic network of the enterprise.")
    Container(artifact_engine, "Artifact Engine", "Python, Flask", "Generates and recommends cognitive artifacts.")
    Container(message_broker, "Message Broker", "RabbitMQ", "Enables asynchronous communication between services.")
    ContainerDb(database, "Database", "PostgreSQL", "Stores the operational data of the SEA system.")
    Container(calm_cli_service, "CALM CLI Service", "Node.js", "Provides CALM validation and generation capabilities.")
    Container(documentation_orchestrator, "Documentation Orchestrator Service", "Python/FastAPI", "Coordinates automated documentation generation.")
    Container(project_context_analyzer, "Project Context Analyzer", "Python/FastAPI", "Extracts project context from codebase and specifications for documentation.")
}

System_Ext(external_systems, "External Systems", "External systems that SEA integrates with (e.g., payment gateways, logistics providers).")

Rel(user, webapp, "Uses", "HTTPS")
Rel(webapp, api_gateway, "Makes API calls to", "HTTPS")
Rel(api_gateway, domain_services, "Routes requests to")
Rel(domain_services, database, "Reads from and writes to", "JDBC")
Rel(domain_services, knowledge_graph_service, "Reads from and writes to", "HTTP/Bolt")
Rel(domain_services, message_broker, "Publishes and subscribes to messages")
Rel(artifact_engine, knowledge_graph_service, "Reads from", "HTTP/Bolt")
Rel(artifact_engine, domain_services, "Receives context from")
Rel(api_gateway, artifact_engine, "Routes requests to")
Rel(domain_services, external_systems, "Integrates with")
Rel(calm_cli_service, domain_services, "Validates architecture of")
Rel(calm_cli_service, knowledge_graph_service, "Validates architecture of")
Rel(api_gateway, documentation_orchestrator, "Routes requests to")
Rel(documentation_orchestrator, project_context_analyzer, "Requests context from", "Internal API")
Rel(project_context_analyzer, domain_services, "Queries", "Internal API")
Rel(project_context_analyzer, knowledge_graph_service, "Queries", "HTTP/Bolt")
Rel(project_context_analyzer, calm_cli_service, "Queries", "Internal API")
Rel(documentation_orchestrator, artifact_engine, "Requests documentation CADSL from", "Internal API")
Rel(webapp, documentation_orchestrator, "Displays rendered documentation", "HTTPS")

@enduml
